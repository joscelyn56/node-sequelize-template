swagger: '2.0'
info:
  description: This is the api for rivers state app
  version: 1.0.1
  title: Rivers App API
host: api.riversapp.xyz
basePath: /
tags:
  - name: Admin
    description: rivers app admin
  - name: Authentication
    description: rivers app authentication
  - name: User
    description: rivers app user
  - name: Business
    description: businesses in the platform
  - name: Hotlines
    description: rivers state hotlines
  - name: Initiatives
    description: government initiatives
  - name: Interests
    description: user preference
  - name: Tags
    description: business tags
  - name: Category
    description: business category
  - name: News
    description: latest news
  - name: Reports
    description: user event reporting system
  - name: Rivers
    description: rivers state full description
  - name: Transport
    description: transportation companies
  - name: Utility
    description: utitlities available
schemes:
  - https
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
  Admin:
    type: apiKey
    name: 'x-access-token'
    in: header
paths:

  '/admin/add':
    post:
      security:
        - Admin: []
      tags:
        - Admin
      summary: add new admin
      description: ''
      operationId: addAdmin
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: first_name
          in: formData
          description: first name of admin
          required: true
          type: string
        - name: last_name
          in: formData
          description: last name of admin
          required: true
          type: string
        - name: email
          in: formData
          description: admin email
          required: true
          type: string
        - name: level
          in: formData
          description: admin level
          required: true
          type: string
      responses:
        '200':
          description: Add new Admin Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Add new admin successful.'
              admin:
                $ref: '#/definitions/Admin'
  '/admin/signin':
    post:
      tags:
        - Admin
      summary: signin Admin
      description: ''
      operationId: signinAdmin
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: email
          in: formData
          description: admin email
          required: true
          type: string
        - name: password
          in: formData
          description: admin password
          required: true
          type: string
      responses:
        '200':
          description: Signin Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              accessToken:
                type: string
                example: 'Admin Authorization Token'
              admin:
                $ref: '#/definitions/Admin'
  '/admin/forgot-password':
    post:
      tags:
        - Admin
      summary: forgot admin password
      description: ''
      operationId: forgotAdminPassword
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: email
          in: formData
          description: admin email
          required: true
          type: string
      responses:
        '200':
          description: Password reset successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'A mail containing your new password has been sent.'
  '/admin/update-password':
    post:
      security:
        - Admin: []
      tags:
        - Admin
      summary: reset admin password
      description: ''
      operationId: updateAdminPassword
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: password
          in: formData
          description: old password
          required: true
          type: string
        - name: new_password
          in: formData
          description: new password
          required: true
          type: string
        - name: confirm_password
          in: formData
          description: confrim new password
          required: true
          type: string
      responses:
        '200':
          description: Password Updated Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Password updated successfully.'
  '/admin/delete/{admin}':
    get:
      security:
        - Admin: []
      tags:
        - Admin
      summary: delete an admin
      description: ''
      operationId: deleteAdmin
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: admin
          in: path
          description: The admin id
          required: true
          type: string
      responses:
        '200':
          description: Delete Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Admin deleted successfully.'
  '/admin/all':
    get:
      security:
        - Admin: []
      tags:
        - Admin
      summary: get all admin
      description: ''
      operationId: getAllAdmins
      produces:
        - application/json
      responses:
        '200':
          description: Get All Admins
          schema:
            type: array
            items:
              $ref: '#/definitions/Admin'
  '/admin/paginate':
    get:
      security:
        - Admin: []
      tags:
        - Admin
      summary: get paginated admins
      description: ''
      operationId: getPaginatedAdmins
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: page number if available
          required: false
          type: string
      responses:
        '200':
          description: Get Paginated Admins
          schema:
            type: object
            properties:
              admins:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Admin'
              prev_page:
                type: integer
                default: 1
              current_page:
                type: integer
                default: 1
              next_page:
                type: integer
                default: 1
  '/admin/profile':
    get:
      security:
        - Admin: []
      tags:
        - Admin
      summary: get admin profile
      description: ''
      operationId: getAdminProfile
      produces:
        - application/json
      responses:
        '200':
          description: Get Admin Profile
          schema:
            $ref: '#/definitions/Admin'
  '/admin/update-profile':
    post:
      security:
        - Admin: []
      tags:
        - Admin
      summary: update admin profile
      description: ''
      operationId: updateAdminProfile
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: first_name
          in: formData
          description: new first name
          required: true
          type: string
        - name: last_name
          in: formData
          description: new last name
          required: true
          type: string
      responses:
        '200':
          description: Profile Updated Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              user:
                $ref: '#/definitions/Admin'
                
  '/auth/signup':
    post:
      tags:
        - Authentication
      summary: signup new user
      description: ''
      operationId: signupUser
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: first_name
          in: formData
          description: first name of user
          required: true
          type: string
        - name: last_name
          in: formData
          description: last name of user
          required: true
          type: string
        - name: email
          in: formData
          description: user email
          required: true
          type: string
        - name: password
          in: formData
          description: user password
          required: true
          type: string
      responses:
        '200':
          description: Signup Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Signup successful.'
  '/auth/google-signup':
    post:
      tags:
        - Authentication
      summary: signup user using google
      description: ''
      operationId: googleSignupUser
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: google_first_name
          in: formData
          description: google first name of user
          required: true
          type: string
        - name: google_last_name
          in: formData
          description: google last name of user
          required: true
          type: string
        - name: google_email
          in: formData
          description: google email
          required: true
          type: string
        - name: google_id
          in: formData
          description: google device id
          required: true
          type: string
      responses:
        '200':
          description: Signup successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Signup successful.'
  '/auth/signin':
    post:
      tags:
        - Authentication
      summary: signin user
      description: ''
      operationId: signinUser
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: email
          in: formData
          description: user email
          required: true
          type: string
        - name: password
          in: formData
          description: user password
          required: true
          type: string
      responses:
        '200':
          description: Signin Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              accessToken:
                type: string
                example: 'Authorization Token'
              user:
                $ref: '#/definitions/User'
  '/auth/google-signin':
    post:
      tags:
        - Authentication
      summary: signin user using google id
      description: ''
      operationId: googleSigninUser
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: google_id
          in: formData
          description: google device id
          required: true
          type: string
      responses:
        '200':
          description: Signin Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              accessToken:
                type: string
                example: 'Authorization Token'
              user:
                $ref: '#/definitions/User'
  '/auth/forgot-password':
    post:
      tags:
        - Authentication
      summary: forgot password
      description: ''
      operationId: forgotPassword
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: email
          in: formData
          description: user email
          required: true
          type: string
      responses:
        '200':
          description: Password reset successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'A mail containing your new password has been sent.'
  '/auth/update-password':
    post:
      security:
        - Bearer: []
      tags:
        - Authentication
      summary: reset user password
      description: ''
      operationId: updatePassword
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: password
          in: formData
          description: old password
          required: true
          type: string
        - name: new_password
          in: formData
          description: new password
          required: true
          type: string
        - name: confirm_password
          in: formData
          description: confrim new password
          required: true
          type: string
      responses:
        '200':
          description: Password Updated Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Password updated successfully.'
  '/auth/delete/{user_id}':
    get:
      security:
        - Admin: []
      tags:
        - Authentication
      summary: delete a user
      description: ''
      operationId: deleteUser
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: user_id
          in: path
          description: The user id
          required: true
          type: string
      responses:
        '200':
          description: Delete Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'User deleted successfully.'
  
  '/user/all':
    get:
      security:
        - Admin: []
      tags:
        - User
      summary: get all users
      description: ''
      operationId: getAllUsers
      produces:
        - application/json
      responses:
        '200':
          description: Get All Users
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
  '/user/paginate':
    get:
      security:
        - Admin: []
      tags:
        - User
      summary: get paginated users
      description: ''
      operationId: getPaginatedUsers
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: page number if available
          required: false
          type: string
      responses:
        '200':
          description: Get Paginated Users
          schema:
            type: object
            properties:
              users:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/User'
              prev_page:
                type: integer
                default: 1
              current_page:
                type: integer
                default: 1
              next_page:
                type: integer
                default: 1
  '/user/profile':
    get:
      security:
        - Bearer: []
      tags:
        - User
      summary: get user profile
      description: ''
      operationId: getUserProfile
      produces:
        - application/json
      responses:
        '200':
          description: Get User Profile
          schema:
            $ref: '#/definitions/User'
  '/user/update-profile':
    post:
      security:
        - Bearer: []
      tags:
        - User
      summary: update user profile
      description: ''
      operationId: updateProfile
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: first_name
          in: formData
          description: new first name
          required: true
          type: string
        - name: last_name
          in: formData
          description: new last name
          required: true
          type: string
      responses:
        '200':
          description: Profile Updated Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              user:
                $ref: '#/definitions/User'
  '/user/update-interests':
    post:
      security:
        - Bearer: []
      tags:
        - User
      summary: update user interests
      description: ''
      operationId: updateInterests
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: interests
          in: formData
          description: send interests as an array not string i.e. ['interest']
          required: true
          type: string
      responses:
        '200':
          description: Interests Updated Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              user:
                $ref: '#/definitions/User'
                
  '/business/all':
    get:
      tags:
        - Business
      summary: get all businesses
      description: ''
      operationId: getAllBusiness
      produces:
        - application/json
      responses:
        '200':
          description: Get All Businesses
          schema:
            type: array
            items:
              $ref: '#/definitions/Business'
  '/business/paginate':
    get:
      tags:
        - Business
      summary: get paginated businesses
      description: ''
      operationId: getPaginatdBusiness
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: page number if available
          required: false
          type: string
      responses:
        '200':
          description: Get Paginated Businesses
          schema:
            type: object
            properties:
              businesses:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Business'
              prev_page:
                type: integer
                default: 1
              current_page:
                type: integer
                default: 1
              next_page:
                type: integer
                default: 1
  '/business/popular':
    get:
      tags:
        - Business
      summary: get popular businesses
      description: ''
      operationId: getPopularBusinesses
      produces:
        - application/json
      responses:
        '200':
          description: Get Popular Businesses
          schema:
            type: array
            items:
              $ref: '#/definitions/Business'
  '/business/get/{business}':
    get:
      tags:
        - Business
      summary: get a business
      description: ''
      operationId: getBusiness
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: business
          in: path
          description: The business id
          required: true
          type: integer
      responses:
        '200':
          description: Get Business
          schema:
            $ref: '#/definitions/Business'
  '/business/view/{business}':
    get:
      tags:
        - Business
      summary: view a business
      description: ''
      operationId: viewBusiness
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: business
          in: path
          description: The business id
          required: true
          type: integer
      responses:
        '200':
          description: Get Business
          schema:
            $ref: '#/definitions/Business'
  '/business/category/{slug}':
    get:
      tags:
        - Business
      summary: get businesses in a category
      description: ''
      operationId: getCategoryBusiness
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: slug
          in: path
          description: The category slug
          required: true
          type: integer
      responses:
        '200':
          description: Get Business in the category
          schema:
            type: array
            items:
              $ref: '#/definitions/Business'
  '/business/category/{slug}/popular':
    get:
      tags:
        - Business
      summary: get popular businesses in a category
      description: ''
      operationId: getCategoryPopularBusiness
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: slug
          in: path
          description: The category slug
          required: true
          type: integer
      responses:
        '200':
          description: Get Popular Business in the category
          schema:
            type: array
            items:
              $ref: '#/definitions/Business'
  '/business/tags/{tag}':
    get:
      tags:
        - Business
      summary: get businesses by tags
      description: ''
      operationId: getTaggedBusiness
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: tag
          in: path
          description: The business tag
          required: true
          type: integer
      responses:
        '200':
          description: Get Businesses with Tag
          schema:
            type: array
            items:
              $ref: '#/definitions/Business'
  '/business/new':
    post:
      security:
        - Admin: []
      tags:
        - Business
      summary: add new business
      description: ''
      operationId: addBusiness
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: title
          in: formData
          description: business title
          required: true
          type: string
        - name: description
          in: formData
          description: business description
          required: true
          type: string
        - name: address
          in: formData
          description: business address
          required: true
          type: string
        - name: longitude
          in: formData
          description: longitude of business
          required: true
          type: string
        - name: latitude
          in: formData
          description: latitude of business
          required: true
          type: string
        - name: tags
          in: formData
          description: tags for identifying business
          required: true
          type: string
        - name: opening_time
          in: formData
          description: opening time of business
          required: false
          type: string
        - name: closing_time
          in: formData
          description: closing time of business
          required: false
          type: string
        - name: weekends
          in: formData
          description: an array of weekend days
          required: false
          type: string
        - name: category
          in: formData
          description: business category
          required: true
          type: string
        - name: image
          in: formData
          description: business image
          required: false
          type: file
        - name: email
          in: formData
          description: business email contact
          required: false
          type: string
        - name: phone
          in: formData
          description: business phone contact
          required: false
          type: string
        - name: website
          in: formData
          description: business website
          required: false
          type: string
      responses:
        '200':
          description: Business Added Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'New business added successfully.'
              business:
                $ref: '#/definitions/Business'
  '/business/update':
    post:
      security:
        - Admin: []
      tags:
        - Business
      summary: update business
      description: ''
      operationId: updateBusiness
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: title
          in: formData
          description: business title
          required: true
          type: string
        - name: description
          in: formData
          description: business description
          required: true
          type: string
        - name: address
          in: formData
          description: business address
          required: true
          type: string
        - name: longitude
          in: formData
          description: longitude of business
          required: true
          type: string
        - name: latitude
          in: formData
          description: latitude of business
          required: true
          type: string
        - name: tags
          in: formData
          description: tags for identifying business
          required: true
          type: string
        - name: opening_time
          in: formData
          description: opening time of business
          required: false
          type: string
        - name: closing_time
          in: formData
          description: closing time of business
          required: false
          type: string
        - name: weekends
          in: formData
          description: an array of weekend days
          required: false
          type: string
        - name: category
          in: formData
          description: business category
          required: true
          type: string
        - name: image
          in: formData
          description: business image
          required: false
          type: file
        - name: email
          in: formData
          description: business email contact
          required: false
          type: string
        - name: phone
          in: formData
          description: business phone contact
          required: false
          type: string
        - name: website
          in: formData
          description: business website
          required: false
          type: string
      responses:
        '200':
          description: Business Updated Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Business has been updated successfully.'
              business:
                $ref: '#/definitions/Business'
  '/business/delete/{business}':
    get:
      security:
        - Admin: []
      tags:
        - Business
      summary: delete a business
      description: ''
      operationId: deleteBusiness
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: business
          in: path
          description: The business id
          required: true
          type: integer
      responses:
        '200':
          description: Delete Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Business deleted successfully.'
                
  '/hotlines/all':
    get:
      tags:
        - Hotlines
      summary: get all hotlines
      description: ''
      operationId: getAllHotlines
      produces:
        - application/json
      responses:
        '200':
          description: Get All Hotlines
          schema:
            type: array
            items:
              $ref: '#/definitions/Hotline'
  '/hotlines/paginate':
    get:
      tags:
        - Hotlines
      summary: get paginated hotlines
      description: ''
      operationId: getPaginatedHotlines
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: page number if available
          required: false
          type: string
      responses:
        '200':
          description: Get Paginated Hotlines
          schema:
            type: object
            properties:
              hotlines:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Hotline'
              prev_page:
                type: integer
                default: 1
              current_page:
                type: integer
                default: 1
              next_page:
                type: integer
                default: 1
  '/hotlines/get/{hotline}':
    get:
      tags:
        - Hotlines
      summary: get a hotline
      description: ''
      operationId: getHotline
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: hotline
          in: path
          description: The hotline id
          required: true
          type: integer
      responses:
        '200':
          description: Get Hotline
          schema:
            $ref: '#/definitions/Hotline'
  '/hotlines/new':
    post:
      security:
        - Admin: []
      tags:
        - Hotlines
      summary: add new hotline
      description: ''
      operationId: addHotline
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: name
          in: formData
          description: hotline name
          required: true
          type: string
        - name: phone_number
          in: formData
          description: hotline phone number
          required: true
          type: string
        - name: image
          in: formData
          description: hotline image
          required: true
          type: file
      responses:
        '200':
          description: Hotline Added Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'New hotline added successfully.'
              hotline:
                $ref: '#/definitions/Hotline'
  '/hotlines/update':
    post:
      security:
        - Admin: []
      tags:
        - Hotlines
      summary: update hotline
      description: ''
      operationId: updateHotline
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: hotline
          in: formData
          description: The hotline id
          required: true
          type: integer
        - name: name
          in: formData
          description: hotline name
          required: true
          type: string
        - name: phone_number
          in: formData
          description: hotline phone number
          required: true
          type: string
        - name: image
          in: formData
          description: hotline image
          required: true
          type: file
      responses:
        '200':
          description: Hotline Updated Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Business has been updated successfully.'
              hotline:
                $ref: '#/definitions/Hotline'
  '/hotlines/delete/{hotline}':
    get:
      security:
        - Admin: []
      tags:
        - Hotlines
      summary: delete a hotline
      description: ''
      operationId: deleteHotline
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: hotline
          in: path
          description: The hotline id
          required: true
          type: integer
      responses:
        '200':
          description: Delete Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Hotline deleted successfully.'
  
  '/initiatives/all':
    get:
      tags:
        - Initiatives
      summary: get all government initiatives
      description: ''
      operationId: getAllInitiatives
      produces:
        - application/json
      responses:
        '200':
          description: Get All Initiatives
          schema:
            type: array
            items:
              $ref: '#/definitions/Initiative'
  '/initiatives/paginate':
    get:
      tags:
        - Initiatives
      summary: get paginated government initiatives
      description: ''
      operationId: getPaginatedInitiatives
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: page number if available
          required: false
          type: string
      responses:
        '200':
          description: Get Paginated Initiatives
          schema:
            type: object
            properties:
              initiatives:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Initiative'
              prev_page:
                type: integer
                default: 1
              current_page:
                type: integer
                default: 1
              next_page:
                type: integer
                default: 1
  '/initiatives/get/{initiative}':
    get:
      tags:
        - Initiatives
      summary: get a government initiative
      description: ''
      operationId: getInitiative
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: initiative
          in: path
          description: The initiative id
          required: true
          type: integer
      responses:
        '200':
          description: Get Initiative
          schema:
            $ref: '#/definitions/Initiative'
  '/initiatives/new':
    post:
      security:
        - Admin: []
      tags:
        - Initiatives
      summary: add new government initiative
      description: ''
      operationId: addInitiative
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: title
          in: formData
          description: initiative title
          required: true
          type: string
        - name: image
          in: formData
          description: initiative image
          required: true
          type: file
        - name: url
          in: formData
          description: initiative url
          required: true
          type: string
      responses:
        '200':
          description: Initiative Added Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'New government initiative added successfully.'
              initiative:
                $ref: '#/definitions/Initiative'
  '/initiatives/update':
    post:
      security:
        - Admin: []
      tags:
        - Initiatives
      summary: update government initiative
      description: ''
      operationId: updateInitiative
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: initiative
          in: formData
          description: The initiative id
          required: true
          type: integer
        - name: title
          in: formData
          description: initiative title
          required: true
          type: string
        - name: image
          in: formData
          description: initiative image
          required: true
          type: file
        - name: url
          in: formData
          description: initiative url
          required: true
          type: string
      responses:
        '200':
          description: Initiative Updated Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg: 
                type: string
                example: 'Government initiative has been updated successfully.'
              initiative:
                $ref: '#/definitions/Initiative'
  '/initiatives/delete/{initiative}':
    get:
      security:
        - Admin: []
      tags:
        - Initiatives
      summary: delete a government initiative
      description: ''
      operationId: deleteInitiative
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: initiative
          in: path
          description: The initiative id
          required: true
          type: integer
      responses:
        '200':
          description: Delete Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Government initiative deleted successfully.'
                
  '/interests/all':
    get:
      tags:
        - Interests
      summary: get all interests
      description: ''
      operationId: getAllInterests
      produces:
        - application/json
      responses:
        '200':
          description: Get All Interests
          schema:
            type: array
            items:
              $ref: '#/definitions/Interest'
  '/interests/paginate':
    get:
      tags:
        - Interests
      summary: get paginated interests
      description: ''
      operationId: getPaginatedInterests
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: page number if available
          required: false
          type: string
      responses:
        '200':
          description: Get Paginated Interests
          schema:
            type: object
            properties:
              interests:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Interest'
              prev_page:
                type: integer
                default: 1
              current_page:
                type: integer
                default: 1
              next_page:
                type: integer
                default: 1
  '/interests/new':
    post:
      security:
        - Admin: []
      tags:
        - Interests
      summary: add new interest
      description: ''
      operationId: addInterest
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: name
          in: formData
          description: interest name
          required: true
          type: string
      responses:
        '200':
          description: Interest Added Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'New interest added successfully.'
              interest:
                $ref: '#/definitions/Interest'
  '/interests/update':
    post:
      security:
        - Admin: []
      tags:
        - Interests
      summary: update interest
      description: ''
      operationId: updateInterest
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: interest
          in: formData
          description: The interest id
          required: true
          type: integer
        - name: name
          in: formData
          description: interest name
          required: true
          type: string
      responses:
        '200':
          description: Interest Updated Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg: 
                type: string
                example: 'Interest has been updated successfully.'
              interest:
                $ref: '#/definitions/Interest'
  '/interests/delete/{interest}':
    get:
      security:
        - Admin: []
      tags:
        - Interests
      summary: delete an interest
      description: ''
      operationId: deleteInterest
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: interest
          in: path
          description: The interest id
          required: true
          type: integer
      responses:
        '200':
          description: Delete Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Interest deleted successfully.'

  '/tags/all':
    get:
      tags:
        - Tags
      summary: get all tags
      description: ''
      operationId: getAllTags
      produces:
        - application/json
      responses:
        '200':
          description: Get All Tags
          schema:
            type: array
            items:
              $ref: '#/definitions/Tag'
  '/tags/paginate':
    get:
      tags:
        - Tags
      summary: get paginated tags
      description: ''
      operationId: getPaginatedTags
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: page number if available
          required: false
          type: string
      responses:
        '200':
          description: Get Paginated Tags
          schema:
            type: object
            properties:
              tags:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Tag'
              prev_page:
                type: integer
                default: 1
              current_page:
                type: integer
                default: 1
              next_page:
                type: integer
                default: 1
  '/tags/new':
    post:
      security:
        - Admin: []
      tags:
        - Tags
      summary: add new tag
      description: ''
      operationId: addTag
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: name
          in: formData
          description: tag name
          required: true
          type: string
      responses:
        '200':
          description: Tag Added Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'New tag added successfully.'
              tag:
                $ref: '#/definitions/Tag'
  '/tags/update':
    post:
      security:
        - Admin: []
      tags:
        - Tags
      summary: update tag
      description: ''
      operationId: updateTag
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: tag
          in: formData
          description: The tag id
          required: true
          type: integer
        - name: name
          in: formData
          description: tag name
          required: true
          type: string
      responses:
        '200':
          description: Tag Updated Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg: 
                type: string
                example: 'Tag has been updated successfully.'
              tag:
                $ref: '#/definitions/Tag'
  '/tags/delete/{tag}':
    get:
      security:
        - Admin: []
      tags:
        - Tags
      summary: delete a tag
      description: ''
      operationId: deleteTag
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: tag
          in: path
          description: The tag id
          required: true
          type: integer
      responses:
        '200':
          description: Delete Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Tag deleted successfully.'           
  
  '/category/all':
    get:
      tags:
        - Category
      summary: get all categories
      description: ''
      operationId: getAllCategories
      produces:
        - application/json
      responses:
        '200':
          description: Get All Categories
          schema:
            type: array
            items:
              $ref: '#/definitions/Category'
  '/category/paginate':
    get:
      tags:
        - Category
      summary: get paginated categories
      description: ''
      operationId: getPaginatedCategories
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: page number if available
          required: false
          type: string
      responses:
        '200':
          description: Get Paginated Categories
          schema:
            type: object
            properties:
              categories:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Category'
              prev_page:
                type: integer
                default: 1
              current_page:
                type: integer
                default: 1
              next_page:
                type: integer
                default: 1
  '/category/new':
    post:
      security:
        - Admin: []
      tags:
        - Category
      summary: add new category
      description: ''
      operationId: addCategory
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: name
          in: formData
          description: category name
          required: true
          type: string
      responses:
        '200':
          description: Category Added Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'New category added successfully.'
              category:
                $ref: '#/definitions/Category'
  '/category/update':
    post:
      security:
        - Admin: []
      tags:
        - Category
      summary: update category
      description: ''
      operationId: updateCategory
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: category
          in: formData
          description: The category id
          required: true
          type: integer
        - name: name
          in: formData
          description: category name
          required: true
          type: string
      responses:
        '200':
          description: Category Updated Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg: 
                type: string
                example: 'Category has been updated successfully.'
              category:
                $ref: '#/definitions/Category'
  '/category/delete/{category}':
    get:
      security:
        - Admin: []
      tags:
        - Category
      summary: delete an category
      description: ''
      operationId: deleteCategory
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: category
          in: path
          description: The category id
          required: true
          type: integer
      responses:
        '200':
          description: Delete Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Category deleted successfully.'
                
  '/news/all':
    get:
      tags:
        - News
      summary: get all news
      description: ''
      operationId: getAllNews
      produces:
        - application/json
      responses:
        '200':
          description: Get All News
          schema:
            type: array
            items:
              $ref: '#/definitions/News'
  '/news/paginate':
    get:
      tags:
        - News
      summary: get paginated news
      description: ''
      operationId: getPaginatedNews
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: page number if available
          required: false
          type: string
      responses:
        '200':
          description: Get Paginated News
          schema:
            type: object
            properties:
              news:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/News'
              prev_page:
                type: integer
                default: 1
              current_page:
                type: integer
                default: 1
              next_page:
                type: integer
                default: 1
  '/news/get/{news}':
    get:
      tags:
        - News
      summary: get a news
      description: ''
      operationId: getNews
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: news
          in: path
          description: The news id
          required: true
          type: integer
      responses:
        '200':
          description: Get News
          schema:
            $ref: '#/definitions/News'
  '/news/new':
    post:
      security:
        - Admin: []
      tags:
        - News
      summary: add news
      description: ''
      operationId: addNews
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: title
          in: formData
          description: title of news
          required: true
          type: string
        - name: content
          in: formData
          description: content of news
          required: true
          type: string
        - name: image
          in: formData
          description: news cover image
          required: false
          type: file
        - name: author
          in: formData
          description: news author
          required: true
          type: string
        - name: source
          in: formData
          description: news source
          required: false
          type: string
      responses:
        '200':
          description: News Added Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'New news added successfully.'
              news:
                $ref: '#/definitions/News'
  '/news/update':
    post:
      security:
        - Admin: []
      tags:
        - News
      summary: update a news
      description: ''
      operationId: updateNews
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: news
          in: formData
          description: The news id
          required: true
          type: integer
        - name: title
          in: formData
          description: title of news
          required: true
          type: string
        - name: content
          in: formData
          description: content of news
          required: true
          type: string
        - name: image
          in: formData
          description: news cover image
          required: false
          type: file
        - name: author
          in: formData
          description: news author
          required: true
          type: string
        - name: source
          in: formData
          description: news source
          required: false
          type: string
      responses:
        '200':
          description: News Updated Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg: 
                type: string
                example: 'News has been updated successfully.'
              news:
                $ref: '#/definitions/News'
  '/news/delete/{news}':
    get:
      security:
        - Admin: []
      tags:
        - News
      summary: delete a news
      description: ''
      operationId: deleteNews
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: news
          in: path
          description: The news id
          required: true
          type: integer
      responses:
        '200':
          description: Delete Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'News deleted successfully.'
                
  '/reports/all':
    get:
      security:
        - Admin: []
      tags:
        - Reports
      summary: get all reports
      description: ''
      operationId: getAllReports
      produces:
        - application/json
      responses:
        '200':
          description: Get All Reports
          schema:
            type: array
            items:
              $ref: '#/definitions/Report'
  '/reports/paginate':
    get:
      security:
        - Admin: []
      tags:
        - Reports
      summary: get paginate reports
      description: ''
      operationId: getPaginatedReports
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: page number if available
          required: false
          type: string
      responses:
        '200':
          description: Get Paginated Reports
          schema:
            type: object
            properties:
              reports:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Report'
              prev_page:
                type: integer
                default: 1
              current_page:
                type: integer
                default: 1
              next_page:
                type: integer
                default: 1
  '/reports/user':
    get:
      security:
        - Bearer: []
      tags:
        - Reports
      summary: get all user reports
      description: ''
      operationId: getAllUserReports
      produces:
        - application/json
      responses:
        '200':
          description: Get All User Reports
          schema:
            type: array
            items:
              $ref: '#/definitions/Report'
  '/reports/get/{report}':
    get:
      tags:
        - Reports
      summary: get a report
      description: ''
      operationId: getReport
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: report
          in: path
          description: The report id
          required: true
          type: integer
      responses:
        '200':
          description: Get Report
          schema:
            $ref: '#/definitions/Report'
  '/reports/new':
    post:
      security:
        - Bearer: []
      tags:
        - Reports
      summary: add new report
      description: ''
      operationId: addReport
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: type
          in: formData
          description: type of report
          required: true
          type: string
        - name: address
          in: formData
          description: address incident took place
          required: true
          type: string
        - name: longitude
          in: formData
          description: longitude of report
          required: true
          type: string
        - name: latitude
          in: formData
          description: latitude of report
          required: true
          type: string
        - name: description
          in: formData
          description: description of report
          required: true
          type: string
        - name: media
          in: formData
          description: report media if any
          required: false
          type: file
        - name: time_of_incident
          in: formData
          description: time incident took place
          required: true
          type: string
        - name: date_of_incident
          in: formData
          description: date incident took place
          required: true
          type: string
      responses:
        '200':
          description: Report Added Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'New report added successfully.'
              report:
                $ref: '#/definitions/Report'
  '/reports/update':
    post:
      security:
        - Bearer: []
      tags:
        - Reports
      summary: update report
      description: ''
      operationId: updateReport
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: report
          in: formData
          description: The report id
          required: true
          type: integer
        - name: type
          in: formData
          description: type of report
          required: true
          type: string
        - name: address
          in: formData
          description: address incident took place
          required: true
          type: string
        - name: longitude
          in: formData
          description: longitude of report
          required: true
          type: string
        - name: latitude
          in: formData
          description: latitude of report
          required: true
          type: string
        - name: description
          in: formData
          description: description of report
          required: true
          type: string
        - name: media
          in: formData
          description: report media if any
          required: false
          type: string
        - name: time_of_incident
          in: formData
          description: time incident took place
          required: true
          type: string
        - name: date_of_incident
          in: formData
          description: date incident took place
          required: true
          type: string
      responses:
        '200':
          description: Report Updated Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg: 
                type: string
                example: 'Report has been updated successfully.'
              report:
                $ref: '#/definitions/Report'
  '/reports/delete/{report}':
    get:
      tags:
        - Reports
      summary: delete a report
      description: ''
      operationId: deleteReport
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: report
          in: path
          description: The report id
          required: true
          type: integer
      responses:
        '200':
          description: Delete Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Report deleted successfully.'
    
  '/rivers/all':
    get:
      tags:
        - Rivers
      summary: get all rivers state descriptions
      description: ''
      operationId: getAllDescriptions
      produces:
        - application/json
      responses:
        '200':
          description: Get All Descriptions
          schema:
            type: array
            items:
              $ref: '#/definitions/Rivers'
  '/rivers/paginate':
    get:
      tags:
        - Rivers
      summary: get paginated rivers state descriptions
      description: ''
      operationId: getPaginatedDescriptions
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: page number if available
          required: false
          type: string
      responses:
        '200':
          description: Get Paginated Descriptions
          schema:
            type: object
            properties:
              descriptions:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Rivers'
              prev_page:
                type: integer
                default: 1
              current_page:
                type: integer
                default: 1
              next_page:
                type: integer
                default: 1
  '/rivers/get/{description}':
    get:
      tags:
        - Rivers
      summary: get a rivers state description
      description: ''
      operationId: getDescription
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: description
          in: path
          description: The description id
          required: true
          type: integer
      responses:
        '200':
          description: Get Description
          schema:
            $ref: '#/definitions/Rivers'
  '/rivers/new':
    post:
      security:
        - Admin: []
      tags:
        - Rivers
      summary: add new rivers state description
      description: ''
      operationId: addDescription
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: name
          in: formData
          description: name of description
          required: true
          type: string
        - name: content
          in: formData
          description: content of description
          required: true
          type: string
        - name: image
          in: formData
          description: description image
          required: false
          type: file
      responses:
        '200':
          description: Description Added Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'New description added successfully.'
              description:
                $ref: '#/definitions/Rivers'
  '/rivers/update':
    post:
      security:
        - Admin: []
      tags:
        - Rivers
      summary: update rivers state description
      description: ''
      operationId: updateDescription
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: description
          in: formData
          description: The description id
          required: true
          type: integer
        - name: name
          in: formData
          description: name of description
          required: true
          type: string
        - name: content
          in: formData
          description: content of description
          required: true
          type: string
        - name: image
          in: formData
          description: description image
          required: false
          type: file
      responses:
        '200':
          description: Description Updated Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg: 
                type: string
                example: 'Description has been updated successfully.'
              description:
                $ref: '#/definitions/Rivers'
  '/rivers/delete/{description}':
    get:
      security:
        - Admin: []
      tags:
        - Rivers
      summary: delete a rivers state
      description: ''
      operationId: deleteRivers
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: description
          in: path
          description: The description id
          required: true
          type: integer
      responses:
        '200':
          description: Delete Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Description deleted successfully.'
    
  '/transport/all':
    get:
      tags:
        - Transport
      summary: get all transport companies
      description: ''
      operationId: getAllTransportCompanies
      produces:
        - application/json
      responses:
        '200':
          description: Get All Transport Companies
          schema:
            type: array
            items:
              $ref: '#/definitions/Transport'
  '/transport/paginate':
    get:
      tags:
        - Transport
      summary: get paginated transport companies
      description: ''
      operationId: getPaginatedTransportCompanies
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: page number if available
          required: false
          type: string
      responses:
        '200':
          description: Get Paginated Transport Companies
          schema:
            type: object
            properties:
              companies:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Transport'
              prev_page:
                type: integer
                default: 1
              current_page:
                type: integer
                default: 1
              next_page:
                type: integer
                default: 1
  '/transport/get/{company}':
    get:
      tags:
        - Transport
      summary: get a transport company
      description: ''
      operationId: getTransportCompany
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: company
          in: path
          description: The company id
          required: true
          type: integer
      responses:
        '200':
          description: Get Transport Company
          schema:
            $ref: '#/definitions/Transport'
  '/transport/new':
    post:
      security:
        - Admin: []
      tags:
        - Transport
      summary: add new transport company
      description: ''
      operationId: addTransportCompany
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: name
          in: formData
          description: company name
          required: true
          type: string
        - name: phone_number
          in: formData
          description: company phone number
          required: false
          type: string
        - name: image
          in: formData
          description: company logo image
          required: true
          type: file
        - name: description
          in: formData
          description: company description
          required: false
          type: string
        - name: app_link
          in: formData
          description: company url
          required: true
          type: string
      responses:
        '200':
          description: Transport company Added Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'New transport company added successfully.'
              company:
                $ref: '#/definitions/Transport'
  '/transport/update':
    post:
      security:
        - Admin: []
      tags:
        - Transport
      summary: update transport company
      description: ''
      operationId: updateTransportCompany
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: company
          in: formData
          description: company id
          required: true
          type: string
        - name: name
          in: formData
          description: company name
          required: true
          type: string
        - name: phone_number
          in: formData
          description: company phone number
          required: false
          type: string
        - name: image
          in: formData
          description: company logo image
          required: true
          type: file
        - name: description
          in: formData
          description: company description
          required: false
          type: string
        - name: app_link
          in: formData
          description: company url
          required: true
          type: string
      responses:
        '200':
          description: Transport Company Updated Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg: 
                type: string
                example: 'Transport company has been updated successfully.'
              company:
                $ref: '#/definitions/Transport'
  '/transport/delete/{company}':
    get:
      security:
        - Admin: []
      tags:
        - Transport
      summary: delete a transport company
      description: ''
      operationId: deleteTransportCompany
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: company
          in: path
          description: The company id
          required: true
          type: integer
      responses:
        '200':
          description: Delete Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Transport company deleted successfully.'
                
  '/utilities/all':
    get:
      tags:
        - Utility
      summary: get all utilities
      description: ''
      operationId: getAllUtilities
      produces:
        - application/json
      responses:
        '200':
          description: Get All Utilities
          schema:
            type: array
            items:
              $ref: '#/definitions/Utility'
  '/utilities/paginate':
    get:
      tags:
        - Utility
      summary: get paginated utilities
      description: ''
      operationId: getPaginatedUtilities
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: page number if available
          required: false
          type: string
      responses:
        '200':
          description: Get Paginated Utilities
          schema:
            type: object
            properties:
              utilities:
                schema:
                  type: array
                  items:
                    $ref: '#/definitions/Utility'
              prev_page:
                type: integer
                default: 1
              current_page:
                type: integer
                default: 1
              next_page:
                type: integer
                default: 1
  '/utilities/{utility}':
    get:
      tags:
        - Utility
      summary: get a utility
      description: ''
      operationId: getUtility
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: utility
          in: path
          description: The utility id
          required: true
          type: integer
      responses:
        '200':
          description: Get Utility
          schema:
            $ref: '#/definitions/Utility'
  '/utilities/new':
    post:
      security:
        - Admin: []
      tags:
        - Utility
      summary: add new utility
      description: ''
      operationId: addUtility
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: title
          in: formData
          description: title of utility
          required: true
          type: string
        - name: image
          in: formData
          description: image of utility
          required: true
          type: file
      responses:
        '200':
          description: Utility Added Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'New utility added successfully.'
              utility:
                $ref: '#/definitions/Utility'
  '/utilities/update':
    post:
      security:
        - Admin: []
      tags:
        - Utility
      summary: update a utility
      description: ''
      operationId: updateUtility
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: utility
          in: formData
          description: The utility id
          required: true
          type: integer
        - name: title
          in: formData
          description: title of utility
          required: true
          type: string
        - name: image
          in: formData
          description: image of utility
          required: false
          type: file
      responses:
        '200':
          description: Utility Updated Successfully
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg: 
                type: string
                example: 'Utility has been updated successfully.'
              utility:
                $ref: '#/definitions/Utility'
  '/utilities/delete/{utility}':
    get:
      security:
        - Admin: []
      tags:
        - Utility
      summary: delete a utility
      description: ''
      operationId: deleteUtility
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: utility
          in: path
          description: The utility id
          required: true
          type: integer
      responses:
        '200':
          description: Delete Successful
          schema:
            type: object
            properties:
              error:
                type: boolean
                default: false
              msg:
                type: string
                example: 'Utility deleted successfully.'
definitions:
  Admin: 
    type: object
    properties:
      userId:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
  User: 
    type: object
    properties:
      userId:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
      interests:
        type: string
  Business:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string
      address:
        type: string
      longitude:
        type: string
      latitude:
        type: string
      tags:
        type: string
      opening_time:
        type: string
      closing_time:
        type: string
      weekends:
        type: string
      category:
        type: string
      image:
        type: string
      email:
        type: string
      phone:
        type: string
      website:
        type: string
  Hotline:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      phone_number:
        type: string
      image:
        type: string
  Initiative:
    type: object
    properties:
      title:
        type: string
      image:
        type: string
      url:
        type: string
  Interest:
    type: object
    properties:
      name:
        type: string
  Tag:
    type: object
    properties:
      name:
        type: string
  Category:
    type: object
    properties:
      name:
        type: string
      slug:
        type: string
  News:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      content:
        type: string
      author:
        type: string
      source:
        type: string
      link:
        type: string
      published:
        type: string
  Report:
    type: object
    properties:
      id:
        type: integer
      type:
        type: string
      address:
        type: string
      longitude:
        type: string
      latitude:
        type: string
      description:
        type: string
      media:
        type: string
      time_of_incident:
        type: string
      date_of_incident:
        type: string
  Rivers:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      content:
        type: string
      image:
        type: string
  Transport:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      phone_number:
        type: string
      image:
        type: string
      description:
        type: string
      playStoreLink:
        type: string
  Utility:
    type: object
    properties:
      id:
        type: integer
      title:
        type: string
      image:
        type: string